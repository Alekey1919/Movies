{"ast":null,"code":"import { ActionTypes } from \"./actionTypes\";\nconst initialState = {\n  myList: []\n};\nexport default function myListReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ActionTypes.ADD_MOVIE_TO_LIST:\n      return { ...state,\n        myList: [...state.myList, payload]\n      };\n\n    case ActionTypes.REMOVE_MOVIE_FROM_LIST:\n      console.log(\"object\");\n    // const index = state.myList.findIndex(\n    //   (listItem) => listItem.id === payload\n    // );\n    // let newList = [...state.myList];\n    // if (index >= 0) {\n    //   newList.splice(index, 1);\n    // } else {\n    //   console.warn(\n    //     `Can't remove movie (id: ${payload}) as it's not in the basket!`\n    //   );\n    // }\n    // return { ...state, myList: newList };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["F:/Alekey/Programming/react/movies/src/store/myListReducer.js"],"names":["ActionTypes","initialState","myList","myListReducer","state","action","type","payload","ADD_MOVIE_TO_LIST","REMOVE_MOVIE_FROM_LIST","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;AAIA,eAAe,SAASC,aAAT,GAAqD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;AAClE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKN,WAAW,CAACQ,iBAAjB;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBK,OAAlB;AAFH,OAAP;;AAKF,SAAKP,WAAW,CAACS,sBAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE,aAAOP,KAAP;AAxBJ;AA0BD","sourcesContent":["import { ActionTypes } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  myList: [],\r\n};\r\n\r\nexport default function myListReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ActionTypes.ADD_MOVIE_TO_LIST:\r\n      return {\r\n        ...state,\r\n        myList: [...state.myList, payload],\r\n      };\r\n\r\n    case ActionTypes.REMOVE_MOVIE_FROM_LIST:\r\n      console.log(\"object\");\r\n    // const index = state.myList.findIndex(\r\n    //   (listItem) => listItem.id === payload\r\n    // );\r\n    // let newList = [...state.myList];\r\n\r\n    // if (index >= 0) {\r\n    //   newList.splice(index, 1);\r\n    // } else {\r\n    //   console.warn(\r\n    //     `Can't remove movie (id: ${payload}) as it's not in the basket!`\r\n    //   );\r\n    // }\r\n    // return { ...state, myList: newList };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}